{"version":3,"file":"component---src-pages-contact-js-e12e724781929d5c854b.js","mappings":"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","sources":["webpack://middle-infinity-fossil/./src/components/SectionTitle.js","webpack://middle-infinity-fossil/./node_modules/@emailjs/browser/es/store/store.js","webpack://middle-infinity-fossil/./node_modules/@emailjs/browser/es/utils/validateParams.js","webpack://middle-infinity-fossil/./node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","webpack://middle-infinity-fossil/./node_modules/@emailjs/browser/es/api/sendPost.js","webpack://middle-infinity-fossil/./node_modules/@emailjs/browser/es/index.js","webpack://middle-infinity-fossil/./node_modules/@emailjs/browser/es/methods/send/send.js","webpack://middle-infinity-fossil/./src/components/ContactForm.js","webpack://middle-infinity-fossil/./src/containers/Contact.js","webpack://middle-infinity-fossil/./src/pages/contact.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst SectionTitle = ({ pageName, title }) => {\n  return (\n    <div className=\"left\">\n      <span className=\"font-montserrat mb-[11px] inline-block bg-[rgba(0,0,0,.04)] px-[10px] py-[4px] text-[12px] font-semibold uppercase tracking-[0px] text-[#333]\">\n        {pageName}\n      </span>\n      <h3 className=\"font-montserrat text-[30px] font-extrabold\">{title}</h3>\n    </div>\n  )\n}\n\nSectionTitle.propTypes = {\n  pageName: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired\n}\n\nexport default SectionTitle\n","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse ? httpResponse.status : 0;\n        this.text = httpResponse ? httpResponse.responseText : 'Network Error';\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, publicKey) => {\n    const uID = publicKey || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.11.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import React, { useState } from 'react'\nimport emailjs from '@emailjs/browser'\n\nconst ContactForm = () => {\n  const [mailData, setMailData] = useState({\n    name: '',\n    emailFrom: '',\n    message: ''\n  })\n  const { name, emailFrom, message } = mailData\n  const [error, setError] = useState(null)\n  const onChange = (e) =>\n    setMailData({ ...mailData, [e.target.name]: e.target.value })\n  const onSubmit = (e) => {\n    e.preventDefault()\n    if (name.length === 0 || emailFrom.length === 0 || message.length === 0) {\n      setError(true)\n      clearError()\n    } else {\n      emailjs\n        .send(\n          'service_f73yk1j', // service id\n          'template_u8rx827', // template id\n          mailData,\n          'QmlsFDhcZpOJSFiJD' // public api\n        )\n        .then(\n          () => {\n            setError(false)\n            clearError()\n            setMailData({ name: '', emailFrom: '', message: '' })\n          },\n          (err) => {\n            console.log(err.text)\n          }\n        )\n    }\n  }\n  const clearError = () => {\n    setTimeout(() => {\n      setError(null)\n    }, 2000)\n  }\n\n  return (\n    <div className=\"fields float-left clear-both h-auto w-full\">\n      <form\n        className=\"contact_form\"\n        id=\"contact_form\"\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <div\n          className={error ? 'empty_notice' : 'returnmessage'}\n          style={{ display: error == null ? 'none' : 'block' }}\n        >\n          <span>\n            {error\n              ? 'Please Fill Required Fields'\n              : 'Your message has been received, We will contact you soon.'}\n          </span>\n        </div>\n        <div className=\"first float-left w-full\">\n          <ul className=\"list-none\">\n            <li className=\"float-left mb-[30px] w-full\">\n              <input\n                name=\"name\"\n                onChange={(e) => onChange(e)}\n                value={name}\n                id=\"name\"\n                type=\"text\"\n                placeholder=\"Name\"\n              />\n            </li>\n            <li className=\"float-left mb-[30px] w-full\">\n              <input\n                name=\"emailFrom\"\n                onChange={(e) => onChange(e)}\n                value={emailFrom}\n                id=\"email_from\"\n                type=\"email\"\n                placeholder=\"Email\"\n              />\n            </li>\n          </ul>\n        </div>\n        <div className=\"last\">\n          <textarea\n            name=\"message\"\n            onChange={(e) => onChange(e)}\n            value={message}\n            id=\"message\"\n            placeholder=\"Message\"\n          />\n        </div>\n        <div className=\"tokyo_tm_button\" data-position=\"left\">\n          <button type=\"submit\">Send Message</button>\n        </div>\n        {/* If you want to change mail address to yours, please open modal.php and go to line 4 */}\n      </form>\n    </div>\n  )\n}\nexport default ContactForm\n","import React from 'react'\nimport SectionContainer from '../components/SectionContainer'\nimport SectionTitle from '../components/SectionTitle'\nimport ContactForm from '../components/ContactForm'\n\nconst Contact = () => {\n  return (\n    <SectionContainer name={'contact'}>\n      <div className=\"container\">\n        <div className=\"tokyo_tm_contact float-left clear-both h-auto w-full px-[0px] py-[100px]\">\n          <div className=\"tokyo_tm_title float-left clear-both mb-[62px] h-auto w-full\">\n            <div className=\"title_flex clear-both flex h-auto w-full items-end justify-between\">\n              <SectionTitle pageName={'Contact'} title={'Get in Touch'} />\n            </div>\n          </div>\n          <ContactForm />\n        </div>\n      </div>\n    </SectionContainer>\n  )\n}\nexport default Contact\n","import * as React from 'react'\nimport SEO from '../containers/SEO'\nimport Contact from '../containers/Contact'\nimport Layout from '../containers/Layout'\n\nconst ContactPage = () => {\n  return (\n    <Layout>\n      <SEO pageTitle={'Contact'} />\n      <Contact />\n    </Layout>\n  )\n}\n\nexport default ContactPage\n"],"names":["_ref","pageName","title","React","className","store","_origin","validateParams","publicKey","serviceID","templateID","EmailJSResponseStatus","constructor","httpResponse","this","status","text","responseText","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","target","responseStatus","open","Object","keys","forEach","key","setRequestHeader","send","templatePrams","uID","_userID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","ContactForm","mailData","setMailData","useState","name","emailFrom","message","error","setError","onChange","e","value","clearError","setTimeout","id","onSubmit","preventDefault","length","emailjs","then","err","console","log","style","display","type","placeholder","Contact","SectionContainer","SectionTitle","ContactPage","Layout","SEO","pageTitle"],"sourceRoot":""}