{"version":3,"file":"component---src-pages-about-js-9d158415ad74009d85d2.js","mappings":"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","sources":["webpack://middle-infinity-fossil/./src/components/SectionTitle.js","webpack://middle-infinity-fossil/./src/containers/about/Introduction.js","webpack://middle-infinity-fossil/./src/containers/about/DetailsColumns.js","webpack://middle-infinity-fossil/./src/components/DownloadButton.js","webpack://middle-infinity-fossil/./src/components/LevelProgrees.js","webpack://middle-infinity-fossil/./src/containers/about/Languages.js","webpack://middle-infinity-fossil/./src/components/StyledList.js","webpack://middle-infinity-fossil/./src/containers/about/InterestsGroups.js","webpack://middle-infinity-fossil/./src/components/ExperienceProgress.js","webpack://middle-infinity-fossil/./src/containers/about/Experience.js","webpack://middle-infinity-fossil/./src/containers/pages/About.js","webpack://middle-infinity-fossil/./src/pages/about.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst SectionTitle = ({ pageName, title }) => {\n  return (\n    <div className=\"left\">\n      <span className=\"font-montserrat mb-[11px] inline-block bg-[rgba(0,0,0,.04)] px-[10px] py-[4px] text-[12px] font-semibold uppercase tracking-[0px] text-[#333]\">\n        {pageName}\n      </span>\n      <h3 className=\"font-montserrat text-[30px] font-extrabold\">{title}</h3>\n    </div>\n  )\n}\n\nSectionTitle.propTypes = {\n  pageName: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired\n}\n\nexport default SectionTitle\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Introduction = ({ name, position, imageNode, bio }) => {\n  return (\n    <section>\n      <div className=\"top_author_image relative float-left clear-both mb-[35px] h-auto w-full\">\n        {imageNode}\n      </div>\n      <div className=\"about_title float-left clear-both mb-[30px] h-auto w-full border-b border-solid border-[#DFDFDF] pb-[20px]\">\n        <h3 className=\"text-[22px] font-bold\">{name}</h3>\n        {position && <span>{position}</span>}\n      </div>\n      <div className=\"about_text float-left clear-both mb-[30px] h-auto w-full border-b border-solid border-[#DFDFDF] pb-[31px]\">\n        {bio.map((paragraph, index) => (\n          <p key={index} className=\"mb-[11px]\">\n            <span dangerouslySetInnerHTML={{ __html: paragraph }} />\n          </p>\n        ))}\n      </div>\n    </section>\n  )\n}\n\nIntroduction.propTypes = {\n  name: PropTypes.string.isRequired,\n  imageNode: PropTypes.node,\n  position: PropTypes.string,\n  bio: PropTypes.arrayOf(PropTypes.string)\n}\n\nIntroduction.defaultProps = {\n  bio: []\n}\n\nexport default Introduction\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst DetailsColumns = ({ items }) => {\n  const firstColumnItems = items.slice(0, items.length / 2)\n  const secondColumnItems = items.slice(items.length / 2)\n\n  return (\n    <div className=\"tokyo_tm_short_info float-left clear-both mb-[40px] flex h-auto w-full border-b border-solid border-[#DFDFDF] pb-[30px]\">\n      <div className=\"left w-1/2 pr-[50px]\">\n        <div className=\"tokyo_tm_info float-left clear-both h-auto w-full\">\n          <ul className=\"m-0 list-none\">\n            {firstColumnItems.map((item) => (\n              <li className=\"m-0\" key={item.id}>\n                <span className=\"float-left mr-[10px] min-w-[100px] font-bold text-black\">\n                  {item.label}:\n                </span>\n                <span>{item.value}</span>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n      <div className=\"right w-1/2 pl-[50px]\">\n        <div className=\"tokyo_tm_info\">\n          <ul className=\"m-0 list-none\">\n            {secondColumnItems.map((item) => (\n              <li className=\"m-0\" key={item.id}>\n                <span className=\"float-left mr-[10px] min-w-[100px] font-bold text-black\">\n                  {item.label}:\n                </span>\n                <span>{item.value}</span>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nDetailsColumns.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired\n    })\n  ).isRequired\n}\n\nexport default DetailsColumns\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst DownloadButton = ({ url, text, position }) => {\n  return (\n    <div className=\"tokyo_tm_button\" data-position={position}>\n      <a href={url} download>\n        <span>{text}</span>\n      </a>\n    </div>\n  )\n}\n\nDownloadButton.propTypes = {\n  url: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  position: PropTypes.string\n}\n\nDownloadButton.defaultProps = {\n  position: 'left'\n}\n\nexport default DownloadButton\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst LevelProgress = ({ title, items }) => {\n  return (\n    <div className=\"right w-1/2 pl-[50px]\">\n      <div className=\"tokyo_section_title float-left clear-both mb-[40px] h-auto w-full\">\n        <h3 className=\"text-[20px] font-bold\">{title}</h3>\n      </div>\n      <div className=\"tokyo_progress\">\n        {items.map((skill) => (\n          <div className=\"progress_inner\" key={skill.name}>\n            <span>\n              <span className=\"label\">{skill.name}</span>\n              <span className=\"number\">{skill.level}%</span>\n            </span>\n            <div className=\"background\">\n              <div className=\"bar\">\n                <div className=\"bar_in\" style={{ width: `${skill.level}%` }} />\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nLevelProgress.propTypes = {\n  title: PropTypes.string.isRequired,\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      level: PropTypes.number.isRequired\n    })\n  ).isRequired\n}\n\nexport default LevelProgress\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport LevelProgrees from '../../components/LevelProgrees'\n\nconst Languages = ({ programmingLanguages, languages }) => {\n  return (\n    <div className=\"tokyo_tm_progressbox float-left clear-both h-auto w-full bg-white pb-[100px] pl-[0px] pr-[0px] pt-[93px]\">\n      <div className=\"container\">\n        <div className=\"in float-left clear-both flex h-auto w-full\">\n          <LevelProgrees title={'Programming'} items={programmingLanguages} />\n          <LevelProgrees title={'Languages'} items={languages} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nLanguages.propTypes = {\n  programmingLanguages: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      level: PropTypes.number.isRequired\n    })\n  ).isRequired,\n  languages: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      level: PropTypes.number.isRequired\n    })\n  ).isRequired\n}\nexport default Languages\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst StyledList = ({ title, items }) => {\n  return (\n    <div className=\"right w-1/2 pl-[50px]\">\n      <div className=\"tokyo_section_title float-left clear-both mb-[40px] h-auto w-full\">\n        <h3 className=\"text-[20px] font-bold\">{title}</h3>\n      </div>\n      <div className=\"tokyo_tm_skill_list float-left clear-both h-auto w-full\">\n        <ul className=\"m-0 list-disc\">\n          {items.map((item, index) => (\n            <li className=\"relative m-0 pl-[25px]\" key={index}>\n              {item}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nStyledList.propTypes = {\n  title: PropTypes.string.isRequired,\n  items: PropTypes.array.isRequired\n}\n\nexport default StyledList\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport StyledList from '../../components/StyledList'\n\nconst InterestsGroups = ({ knowledge, interests }) => {\n  return (\n    <div className=\"tokyo_tm_skillbox float-left clear-both h-auto w-full pb-[90px] pl-[0px] pr-[0px] pt-[90px]\">\n      <div className=\"container\">\n        <div className=\"in float-left clear-both flex h-auto w-full\">\n          <StyledList title={'Knowledge'} items={knowledge} />\n          <StyledList title={'Interests'} items={interests} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nInterestsGroups.propTypes = {\n  knowledge: PropTypes.array.isRequired,\n  interests: PropTypes.array.isRequired\n}\nexport default InterestsGroups\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst ExperienceProgress = ({ title, items }) => {\n  return (\n    <div className=\"left w-1/2 pr-[50px]\">\n      <div className=\"tokyo_section_title float-left clear-both mb-[40px] h-auto w-full\">\n        <h3 className=\"text-[20px] font-bold\">Education</h3>\n      </div>\n      <div className=\"tokyo_tm_resume_list float-left clear-both h-auto w-full\">\n        <ul className=\"relative m-0 inline-block list-none pt-[10px]\">\n          {items.map((item, i) => (\n            <li\n              className={`relative float-left m-0 w-full pl-[20px] ${\n                i === item.length - 1 ? '' : 'pb-[45px]'\n              }`}\n              key={item.id}\n            >\n              <div className=\"list_inner  relative float-left clear-both flex h-auto w-full\">\n                <div className=\"time w-1/2 pr-[20px]\">\n                  <span className=\"inline-block whitespace-nowrap rounded-[50px] bg-[rgba(0,0,0,.05)] px-[25px] py-[5px] text-[14px]\">\n                    {item.startDate} - {item.endDate}\n                  </span>\n                </div>\n                <div className=\"place w-1/2 pl-[20px]\">\n                  <h3 className=\"mb-[2px] text-[16px] font-semibold\">\n                    {item.name}\n                  </h3>\n                  <span className=\"text-[14px]\">{item.description}</span>\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nExperienceProgress.propTypes = {\n  title: PropTypes.string.isRequired,\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      startDate: PropTypes.string.isRequired,\n      endDate: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired\n    })\n  ).isRequired\n}\nexport default ExperienceProgress\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ExperienceProgress from '../../components/ExperienceProgress'\n\nconst Experience = ({ education, experiences }) => {\n  return (\n    <div className=\"tokyo_tm_resumebox float-left clear-both h-auto w-full bg-white px-0 py-[93px]\">\n      <div className=\"container\">\n        <div className=\"in float-left clear-both flex h-auto w-full\">\n          <ExperienceProgress\n            title={'Education'}\n            items={experiences.map((experience) => ({\n              id: experience.id,\n              startDate: experience.startDate,\n              endDate: experience.endDate,\n              name: experience.organization,\n              description: experience.position[0]\n            }))}\n          />\n          <ExperienceProgress\n            title={'Education'}\n            items={education.map((edu) => ({\n              id: edu.id,\n              startDate: edu.startDate,\n              endDate: edu.endDate,\n              name: edu.school,\n              description: edu.degree\n            }))}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nExperience.propTypes = {\n  education: PropTypes.array.isRequired,\n  experiences: PropTypes.array.isRequired\n}\n\nexport default Experience\n","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport SectionContainer from '../../components/SectionContainer'\nimport SectionTitle from '../../components/SectionTitle'\nimport Introduction from '../about/Introduction'\nimport DetailsColumns from '../about/DetailsColumns'\nimport DownloadButton from '../../components/DownloadButton'\nimport Languages from '../about/Languages'\nimport InterestsGroups from '../about/InterestsGroups'\nimport { StaticImage } from 'gatsby-plugin-image'\nimport Experience from '../about/Experience'\n\nconst About = () => {\n  const { authorJson, careerJson } = useStaticQuery(graphql`\n    query {\n      authorJson {\n        fullName\n        displayName\n        summary\n        roles\n        positions\n        technologies\n        current {\n          workplace {\n            name\n            position\n          }\n        }\n        address {\n          city\n          country\n        }\n        hobbies\n        contacts {\n          email\n        }\n        education {\n          id\n          school\n          speciality\n          degree\n          startDate\n          endDate\n        }\n        programming_languages {\n          name\n          level\n        }\n        languages {\n          name\n          level\n        }\n        tech_groups\n        interests_groups\n      }\n      careerJson {\n        path {\n          id\n          organization\n          position\n          responsibilities\n          startDate\n          technologies\n          url\n          endDate\n          description\n        }\n      }\n    }\n  `)\n\n  const facts = [\n    {\n      id: 'company',\n      label: 'Company',\n      value: authorJson.current.workplace.name\n    },\n    {\n      id: 'position',\n      label: 'Position',\n      value: authorJson.current.workplace.position\n    },\n    { id: 'email', label: 'Email', value: authorJson.contacts.email },\n    {\n      id: 'location',\n      label: 'Location',\n      value: `${authorJson.address.city}, ${authorJson.address.country}`\n    },\n    {\n      id: 'degree',\n      label: 'Degree',\n      value: authorJson.education[0].degree\n    },\n    {\n      id: 'speciality',\n      label: 'Speciality',\n      value: authorJson.education[0].speciality\n    }\n  ]\n\n  return (\n    <SectionContainer name={'about'}>\n      <div className=\"container\">\n        <div className=\"tokyo_tm_about float-left clear-both h-auto w-full px-0 py-[100px]\">\n          <div className=\"tokyo_tm_title float-left clear-both mb-[62px] h-auto w-full\">\n            <div className=\"title_flex clear-both flex h-auto w-full items-end justify-between\">\n              <SectionTitle pageName={'About'} title={'About Me'} />\n            </div>\n          </div>\n          <Introduction\n            imageNode={\n              <StaticImage\n                className=\"min-w-full\"\n                src={'../../images/aboutme.jpg'}\n                alt={authorJson.displayName}\n              />\n            }\n            name={authorJson.fullName}\n            position={authorJson.positions.join(' | ')}\n            bio={[\n              authorJson.roles.join('. '),\n              authorJson.summary,\n              `My current position is ${authorJson.current.workplace.position} in  ${authorJson.current.workplace.name}.`,\n              `Skill Set: ${authorJson.technologies.join(', ')}.`\n            ]}\n          />\n          <DetailsColumns items={facts} />\n          <DownloadButton text={'Download CV'} url={'../downloads/cv.pdf'} />\n        </div>\n      </div>\n      <Languages\n        programmingLanguages={authorJson.programming_languages}\n        languages={authorJson.languages}\n      />\n      <InterestsGroups\n        interests={authorJson.interests_groups}\n        knowledge={authorJson.tech_groups}\n      />\n      <Experience\n        education={authorJson.education}\n        experiences={careerJson.path}\n      />\n    </SectionContainer>\n  )\n}\n\nexport default About\n","import * as React from 'react'\nimport SEO from '../containers/SEO'\nimport About from '../containers/pages/About'\nimport Layout from '../containers/Layout'\n\nconst AboutPage = () => {\n  return (\n    <Layout>\n      <SEO pageTitle={'About Me'} />\n      <About />\n    </Layout>\n  )\n}\n\nexport default AboutPage\n"],"names":["_ref","pageName","title","React","className","Introduction","name","position","imageNode","bio","map","paragraph","index","key","dangerouslySetInnerHTML","__html","defaultProps","items","firstColumnItems","slice","length","secondColumnItems","item","id","label","value","DownloadButton","url","text","href","download","skill","level","style","width","programmingLanguages","languages","LevelProgrees","knowledge","interests","StyledList","i","startDate","endDate","description","education","experiences","ExperienceProgress","experience","organization","edu","school","degree","About","authorJson","careerJson","useStaticQuery","facts","current","workplace","contacts","email","address","city","country","speciality","SectionContainer","SectionTitle","StaticImage","src","alt","displayName","__imageData","require","fullName","positions","join","roles","summary","technologies","DetailsColumns","Languages","programming_languages","InterestsGroups","interests_groups","tech_groups","Experience","path","AboutPage","Layout","SEO","pageTitle"],"sourceRoot":""}