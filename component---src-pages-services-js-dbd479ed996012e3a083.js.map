{"version":3,"file":"component---src-pages-services-js-dbd479ed996012e3a083.js","mappings":"iJAmBA,IAhBqBA,IAA0B,IAAzB,SAAEC,EAAQ,MAAEC,GAAOF,EACvC,OACEG,EAAAA,cAAA,OAAKC,UAAU,QACbD,EAAAA,cAAA,QAAMC,UAAU,iJACbH,GAEHE,EAAAA,cAAA,MAAIC,UAAU,8CAA8CF,GACxD,C,4IC2CV,MAjDoBF,IAAkB,IAAjB,QAAEK,GAASL,EAC9B,MAAM,gBAAEM,EAAe,YAAEC,IAAgBC,EAAAA,EAAAA,YAAWC,EAAAA,GACpD,OACEN,EAAAA,cAAA,MAAIC,UAAU,4BAA4BM,IAAKL,EAAQM,IACrDR,EAAAA,cAAA,OAAKC,UAAU,oLACbD,EAAAA,cAAA,QAAMC,UAAU,0LACbC,EAAQM,IAAM,EAAK,IAAGN,EAAQM,KAAON,EAAQM,IAEhDR,EAAAA,cAAA,MAAIC,UAAU,oDACXC,EAAQO,MAEXT,EAAAA,cAAA,KAAGC,UAAU,QAAQC,EAAQQ,KAAK,GAAGC,MAAM,EAAG,KAC9CX,EAAAA,cAAA,KAAGC,UAAU,QAAQC,EAAQQ,KAAK,GAAGC,MAAM,EAAG,IAAI,OAClDX,EAAAA,cAAA,OAAKC,UAAU,sBACbD,EAAAA,cAAA,KACEY,KAAK,IACLC,QAAUC,IACRA,EAAEC,iBACFX,GAAY,GACZD,EAAgBD,EAAQ,GAG1BF,EAAAA,cAAA,YAAM,eAGVA,EAAAA,cAAA,KACEC,UAAU,qBACVW,KAAK,IACLC,QAAUC,IACRA,EAAEC,iBACFX,GAAY,GACZD,EAAgBD,EAAQ,IAI5BF,EAAAA,cAAA,OACEC,UAAU,mEACVe,IAAKd,EAAQe,MACbC,IAAI,WAGL,ECnBT,MAtBqBrB,IAAmB,IAAlB,SAAEsB,GAAUtB,EAChC,OACEG,EAAAA,cAAA,OAAKC,UAAU,4CACbD,EAAAA,cAAA,MAAIC,UAAU,uCACXkB,EAASC,KAAKlB,GACbF,EAAAA,cAACqB,EAAW,CAACd,IAAKL,EAAQM,GAAIN,QAASA,OAGvC,ECqDV,MA1DiBoB,KACf,MAAM,WAAEC,EAAU,OAAEC,IAAWC,EAAAA,EAAAA,gBAAe,YAwBxCC,EAAeF,EAAOG,MAAMC,QAAO,CAACC,EAAKC,KACtC,IACFD,EACH,CAACC,EAAKC,KAAKtB,OAAOuB,EAAAA,EAAAA,IAChBC,EAAAA,EAAAA,GAASH,EAAKC,KAAKG,gBAAgBC,qBAGtC,CAAC,GACEhB,EAAWI,EAAWJ,SAASC,KAAKlB,IACjC,IACFA,EACHe,MAAOS,EAAaxB,EAAQkC,WAGhC,OACEpC,EAAAA,cAACqC,EAAAA,EAAgB,CAAC5B,KAAM,YACtBT,EAAAA,cAAA,OAAKC,UAAU,aACbD,EAAAA,cAAA,OAAKC,UAAU,yEACbD,EAAAA,cAAA,OAAKC,UAAU,gEACbD,EAAAA,cAAA,OAAKC,UAAU,sEACbD,EAAAA,cAACsC,EAAAA,EAAY,CACXxC,SAAU,WACVC,MAAO,4BAIbC,EAAAA,cAACuC,EAAY,CAACpB,SAAUA,MAGX,E,UC/CvB,MATqBqB,IAEjBxC,EAAAA,cAACyC,EAAAA,EAAM,KACLzC,EAAAA,cAAC0C,EAAAA,EAAG,CAACC,UAAW,aAChB3C,EAAAA,cAACsB,EAAQ,M","sources":["webpack://middle-infinity-fossil/./src/components/SectionTitle.js","webpack://middle-infinity-fossil/./src/containers/services/ServiceItem.js","webpack://middle-infinity-fossil/./src/containers/services/ServiceItems.js","webpack://middle-infinity-fossil/./src/containers/pages/Services.js","webpack://middle-infinity-fossil/./src/pages/services.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst SectionTitle = ({ pageName, title }) => {\n  return (\n    <div className=\"left\">\n      <span className=\"font-montserrat mb-[11px] inline-block bg-[rgba(0,0,0,.04)] px-[10px] py-[4px] text-[12px] font-semibold uppercase tracking-[0px] text-[#333]\">\n        {pageName}\n      </span>\n      <h3 className=\"font-montserrat text-[30px] font-extrabold\">{title}</h3>\n    </div>\n  )\n}\n\nSectionTitle.propTypes = {\n  pageName: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired\n}\n\nexport default SectionTitle\n","import React, { useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport { M1FContext } from '../../Context'\n\nconst ServiceItem = ({ service }) => {\n  const { setServiceModal, modalToggle } = useContext(M1FContext)\n  return (\n    <li className=\"mb-[40px] w-1/3 pl-[40px]\" key={service.id}>\n      <div className=\"list_inner relative float-left clear-both h-auto w-full border border-solid border-[rgba(0,0,0,.1)] bg-white pb-[40px] pl-[30px] pr-[30px] pt-[45px] transition-all duration-300\">\n        <span className=\"number font-montserrat relative mb-[25px] inline-block h-[60px] w-[60px] rounded-full bg-[rgba(0,0,0,.03)] text-center font-bold leading-[60px] text-black transition-all duration-300\">\n          {service.id <= 9 ? `0${service.id}` : service.id}\n        </span>\n        <h3 className=\"title mb-[15px] text-[18px] font-bold text-black\">\n          {service.name}\n        </h3>\n        <b className=\"text\">{service.text[0].slice(0, 75)}</b>\n        <p className=\"text\">{service.text[1].slice(0, 75)}...</p>\n        <div className=\"tokyo_tm_read_more\">\n          <a\n            href=\"#\"\n            onClick={(e) => {\n              e.preventDefault()\n              modalToggle(true)\n              setServiceModal(service)\n            }}\n          >\n            <span>Read More</span>\n          </a>\n        </div>\n        <a\n          className=\"tokyo_tm_full_link\"\n          href=\"#\"\n          onClick={(e) => {\n            e.preventDefault()\n            modalToggle(true)\n            setServiceModal(service)\n          }}\n        />\n        {/* Service Popup Start */}\n        <img\n          className=\"popup_service_image invisible absolute z-[-111] hidden opacity-0\"\n          src={service.image}\n          alt=\"image\"\n        />\n      </div>\n    </li>\n  )\n}\n\nServiceItem.propTypes = {\n  service: PropTypes.object.isRequired\n}\n\nexport default ServiceItem\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ServiceItem from './ServiceItem'\n\nconst ServiceItems = ({ services }) => {\n  return (\n    <div className=\"list float-left clear-both h-auto w-full\">\n      <ul className=\"ml-[-40px] flex list-none flex-wrap\">\n        {services.map((service) => (\n          <ServiceItem key={service.id} service={service} />\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nServiceItems.propTypes = {\n  services: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      text: PropTypes.array.isRequired\n    })\n  ).isRequired\n}\n\nexport default ServiceItems\n","import React from 'react'\nimport SectionContainer from '../../components/SectionContainer'\nimport SectionTitle from '../../components/SectionTitle'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { getImage, getSrc } from 'gatsby-plugin-image'\nimport ServiceItems from '../services/ServiceItems'\n\nconst Services = () => {\n  const { authorJson, images } = useStaticQuery(graphql`\n    query {\n      authorJson {\n        services {\n          id\n          alias\n          title\n          text\n        }\n      }\n      images: allFile(filter: { relativeDirectory: { eq: \"services\" } }) {\n        edges {\n          node {\n            name\n            relativeDirectory\n            relativePath\n            childImageSharp {\n              gatsbyImageData(height: 430)\n            }\n          }\n        }\n      }\n    }\n  `)\n  const imageSources = images.edges.reduce((obj, edge) => {\n    return {\n      ...obj,\n      [edge.node.name]: getSrc(\n        getImage(edge.node.childImageSharp.gatsbyImageData)\n      )\n    }\n  }, {})\n  const services = authorJson.services.map((service) => {\n    return {\n      ...service,\n      image: imageSources[service.alias]\n    }\n  })\n  return (\n    <SectionContainer name={'services'}>\n      <div className=\"container\">\n        <div className=\"tokyo_tm_services float-left clear-both h-auto w-full px-0 py-[100px]\">\n          <div className=\"tokyo_tm_title float-left clear-both mb-[62px] h-auto w-full\">\n            <div className=\"title_flex clear-both flex h-auto w-full items-end justify-between\">\n              <SectionTitle\n                pageName={'Services'}\n                title={'What can I do for you'}\n              />\n            </div>\n          </div>\n          <ServiceItems services={services} />\n        </div>\n      </div>\n    </SectionContainer>\n  )\n}\n\nexport default Services\n","import * as React from 'react'\nimport SEO from '../containers/SEO'\nimport Services from '../containers/pages/Services'\nimport Layout from '../containers/Layout'\n\nconst ServicesPage = () => {\n  return (\n    <Layout>\n      <SEO pageTitle={'Services'} />\n      <Services />\n    </Layout>\n  )\n}\n\nexport default ServicesPage\n"],"names":["_ref","pageName","title","React","className","service","setServiceModal","modalToggle","useContext","M1FContext","key","id","name","text","slice","href","onClick","e","preventDefault","src","image","alt","services","map","ServiceItem","Services","authorJson","images","useStaticQuery","imageSources","edges","reduce","obj","edge","node","getSrc","getImage","childImageSharp","gatsbyImageData","alias","SectionContainer","SectionTitle","ServiceItems","ServicesPage","Layout","SEO","pageTitle"],"sourceRoot":""}